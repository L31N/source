
bin/Debug/can_client.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00001134  00000000  00000000  00000428  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000cff  00000000  00000000  0000155c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  0000225b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000116  00000000  00000000  000022db  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000759  00000000  00000000  000023f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000042a  00000000  00000000  00002b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006f0  00000000  00000000  00002f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d0  00000000  00000000  00003664  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000249  00000000  00000000  00003734  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000039e  00000000  00000000  0000397d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 000000d4  00000000  00000000  00003d1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00003def  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 44 00 	jmp	0x88	; 0x88 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  6c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>

00000070 <_mcp2515_cnf>:
  70:	04 b6 e7 04 b6 d3 04 b6 c7 04 b6 c3 02 90 07 03     ................
  80:	ac 81 03 ac 80 02 90 00                             ........

00000088 <__ctors_end>:
  88:	11 24       	eor	r1, r1
  8a:	1f be       	out	0x3f, r1	; 63
  8c:	cf ef       	ldi	r28, 0xFF	; 255
  8e:	d0 e1       	ldi	r29, 0x10	; 16
  90:	de bf       	out	0x3e, r29	; 62
  92:	cd bf       	out	0x3d, r28	; 61
  94:	0e 94 50 00 	call	0xa0	; 0xa0 <main>
  98:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <main>:
#include <avr/pgmspace.h>

#include "can.h"
#include "can_testing.h"

int main () {
  a0:	0f 93       	push	r16
  a2:	1f 93       	push	r17
  a4:	df 93       	push	r29
  a6:	cf 93       	push	r28
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
  ac:	2c 97       	sbiw	r28, 0x0c	; 12
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	cd bf       	out	0x3d, r28	; 61

    can_init(BITRATE_100_KBPS);
  b8:	83 e0       	ldi	r24, 0x03	; 3
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <can_init>

    init_leds();
  c0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9init_ledsv>
    led(false, true);
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	61 e0       	ldi	r22, 0x01	; 1
  c8:	0e 94 7d 00 	call	0xfa	; 0xfa <_Z3ledbb>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	9f ef       	ldi	r25, 0xFF	; 255
  d0:	ac e2       	ldi	r26, 0x2C	; 44
  d2:	81 50       	subi	r24, 0x01	; 1
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	a0 40       	sbci	r26, 0x00	; 0
  d8:	e1 f7       	brne	.-8      	; 0xd2 <main+0x32>
  da:	00 c0       	rjmp	.+0      	; 0xdc <main+0x3c>
  dc:	00 00       	nop
    _delay_ms(1000);
    led(true, false);
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	60 e0       	ldi	r22, 0x00	; 0
  e2:	0e 94 7d 00 	call	0xfa	; 0xfa <_Z3ledbb>
  e6:	8e 01       	movw	r16, r28
  e8:	0f 5f       	subi	r16, 0xFF	; 255
  ea:	1f 4f       	sbci	r17, 0xFF	; 255

    can_t msg2;
    while(true) can_send_message(&msg2);
  ec:	c8 01       	movw	r24, r16
  ee:	0e 94 54 01 	call	0x2a8	; 0x2a8 <can_send_message>
  f2:	fc cf       	rjmp	.-8      	; 0xec <main+0x4c>

000000f4 <_Z9init_ledsv>:

#include "can.h"
#include "can_testing.h"

void init_leds() {
    DDRB = 0b00000011;  // set pins for LEDs as output
  f4:	83 e0       	ldi	r24, 0x03	; 3
  f6:	84 b9       	out	0x04, r24	; 4
    return;
}
  f8:	08 95       	ret

000000fa <_Z3ledbb>:

void led (bool green, bool red) {
    if (green) PORTB |= (1 << 0);
  fa:	88 23       	and	r24, r24
  fc:	29 f0       	breq	.+10     	; 0x108 <_Z3ledbb+0xe>
  fe:	28 9a       	sbi	0x05, 0	; 5
    else PORTB &= ~(1 << 0);

    if (red) PORTB |= (1 << 1);
 100:	66 23       	and	r22, r22
 102:	29 f4       	brne	.+10     	; 0x10e <_Z3ledbb+0x14>
    else PORTB &= ~(1 << 1);
 104:	29 98       	cbi	0x05, 1	; 5
 106:	08 95       	ret
    return;
}

void led (bool green, bool red) {
    if (green) PORTB |= (1 << 0);
    else PORTB &= ~(1 << 0);
 108:	28 98       	cbi	0x05, 0	; 5

    if (red) PORTB |= (1 << 1);
 10a:	66 23       	and	r22, r22
 10c:	d9 f3       	breq	.-10     	; 0x104 <_Z3ledbb+0xa>
 10e:	29 9a       	sbi	0x05, 1	; 5
 110:	08 95       	ret

00000112 <_Z10switch_ledbb>:
    else PORTB &= ~(1 << 1);
}

void switch_led(bool green, bool red) {
    if (green) PORTB ^= (1 << 0);
 112:	88 23       	and	r24, r24
 114:	21 f0       	breq	.+8      	; 0x11e <_Z10switch_ledbb+0xc>
 116:	85 b1       	in	r24, 0x05	; 5
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	89 27       	eor	r24, r25
 11c:	85 b9       	out	0x05, r24	; 5
    if (red) PORTB ^= (1 << 1);
 11e:	66 23       	and	r22, r22
 120:	21 f0       	breq	.+8      	; 0x12a <_Z10switch_ledbb+0x18>
 122:	85 b1       	in	r24, 0x05	; 5
 124:	92 e0       	ldi	r25, 0x02	; 2
 126:	89 27       	eor	r24, r25
 128:	85 b9       	out	0x05, r24	; 5
 12a:	08 95       	ret

0000012c <mcp2515_write_register>:
 12c:	1f 93       	push	r17
 12e:	df 93       	push	r29
 130:	cf 93       	push	r28
 132:	0f 92       	push	r0
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
 138:	18 2f       	mov	r17, r24
 13a:	2c 98       	cbi	0x05, 4	; 5
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	69 83       	std	Y+1, r22	; 0x01
 140:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 144:	81 2f       	mov	r24, r17
 146:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 14a:	69 81       	ldd	r22, Y+1	; 0x01
 14c:	86 2f       	mov	r24, r22
 14e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 152:	2c 9a       	sbi	0x05, 4	; 5
 154:	0f 90       	pop	r0
 156:	cf 91       	pop	r28
 158:	df 91       	pop	r29
 15a:	1f 91       	pop	r17
 15c:	08 95       	ret

0000015e <mcp2515_read_register>:
 15e:	1f 93       	push	r17
 160:	18 2f       	mov	r17, r24
 162:	2c 98       	cbi	0x05, 4	; 5
 164:	83 e0       	ldi	r24, 0x03	; 3
 166:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 16a:	81 2f       	mov	r24, r17
 16c:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 176:	2c 9a       	sbi	0x05, 4	; 5
 178:	1f 91       	pop	r17
 17a:	08 95       	ret

0000017c <mcp2515_bit_modify>:
 17c:	1f 93       	push	r17
 17e:	df 93       	push	r29
 180:	cf 93       	push	r28
 182:	00 d0       	rcall	.+0      	; 0x184 <mcp2515_bit_modify+0x8>
 184:	cd b7       	in	r28, 0x3d	; 61
 186:	de b7       	in	r29, 0x3e	; 62
 188:	18 2f       	mov	r17, r24
 18a:	2c 98       	cbi	0x05, 4	; 5
 18c:	85 e0       	ldi	r24, 0x05	; 5
 18e:	4a 83       	std	Y+2, r20	; 0x02
 190:	69 83       	std	Y+1, r22	; 0x01
 192:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 196:	81 2f       	mov	r24, r17
 198:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 19c:	69 81       	ldd	r22, Y+1	; 0x01
 19e:	86 2f       	mov	r24, r22
 1a0:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 1a4:	4a 81       	ldd	r20, Y+2	; 0x02
 1a6:	84 2f       	mov	r24, r20
 1a8:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 1ac:	2c 9a       	sbi	0x05, 4	; 5
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	cf 91       	pop	r28
 1b4:	df 91       	pop	r29
 1b6:	1f 91       	pop	r17
 1b8:	08 95       	ret

000001ba <mcp2515_read_status>:
 1ba:	2c 98       	cbi	0x05, 4	; 5
 1bc:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 1c0:	8f ef       	ldi	r24, 0xFF	; 255
 1c2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 1c6:	2c 9a       	sbi	0x05, 4	; 5
 1c8:	08 95       	ret

000001ca <can_init>:
 1ca:	ef 92       	push	r14
 1cc:	ff 92       	push	r15
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	df 93       	push	r29
 1d4:	cf 93       	push	r28
 1d6:	0f 92       	push	r0
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	18 2f       	mov	r17, r24
 1de:	88 30       	cpi	r24, 0x08	; 8
 1e0:	08 f0       	brcs	.+2      	; 0x1e4 <can_init+0x1a>
 1e2:	59 c0       	rjmp	.+178    	; 0x296 <can_init+0xcc>
 1e4:	2c 9a       	sbi	0x05, 4	; 5
 1e6:	24 9a       	sbi	0x04, 4	; 4
 1e8:	2f 98       	cbi	0x05, 7	; 5
 1ea:	2d 98       	cbi	0x05, 5	; 5
 1ec:	2e 98       	cbi	0x05, 6	; 5
 1ee:	27 9a       	sbi	0x04, 7	; 4
 1f0:	25 9a       	sbi	0x04, 5	; 4
 1f2:	26 98       	cbi	0x04, 6	; 4
 1f4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <mcp2515_spi_init>
 1f8:	2c 98       	cbi	0x05, 4	; 5
 1fa:	80 ec       	ldi	r24, 0xC0	; 192
 1fc:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 200:	8f e9       	ldi	r24, 0x9F	; 159
 202:	9f e0       	ldi	r25, 0x0F	; 15
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <can_init+0x3a>
 208:	00 c0       	rjmp	.+0      	; 0x20a <can_init+0x40>
 20a:	00 00       	nop
 20c:	2c 9a       	sbi	0x05, 4	; 5
 20e:	ef e3       	ldi	r30, 0x3F	; 63
 210:	fc e9       	ldi	r31, 0x9C	; 156
 212:	31 97       	sbiw	r30, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <can_init+0x48>
 216:	00 c0       	rjmp	.+0      	; 0x218 <can_init+0x4e>
 218:	00 00       	nop
 21a:	2c 98       	cbi	0x05, 4	; 5
 21c:	82 e0       	ldi	r24, 0x02	; 2
 21e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 222:	88 e2       	ldi	r24, 0x28	; 40
 224:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 228:	83 e0       	ldi	r24, 0x03	; 3
 22a:	18 9f       	mul	r17, r24
 22c:	70 01       	movw	r14, r0
 22e:	11 24       	eor	r1, r1
 230:	87 01       	movw	r16, r14
 232:	00 59       	subi	r16, 0x90	; 144
 234:	1f 4f       	sbci	r17, 0xFF	; 255
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	f8 01       	movw	r30, r16
 23a:	84 91       	lpm	r24, Z+
 23c:	99 83       	std	Y+1, r25	; 0x01
 23e:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 242:	99 81       	ldd	r25, Y+1	; 0x01
 244:	9f 5f       	subi	r25, 0xFF	; 255
 246:	0f 5f       	subi	r16, 0xFF	; 255
 248:	1f 4f       	sbci	r17, 0xFF	; 255
 24a:	93 30       	cpi	r25, 0x03	; 3
 24c:	a9 f7       	brne	.-22     	; 0x238 <can_init+0x6e>
 24e:	83 e0       	ldi	r24, 0x03	; 3
 250:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 254:	2c 9a       	sbi	0x05, 4	; 5
 256:	8d e0       	ldi	r24, 0x0D	; 13
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	0e 94 96 00 	call	0x12c	; 0x12c <mcp2515_write_register>
 25e:	22 98       	cbi	0x04, 2	; 4
 260:	2a 9a       	sbi	0x05, 2	; 5
 262:	8c e0       	ldi	r24, 0x0C	; 12
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	0e 94 96 00 	call	0x12c	; 0x12c <mcp2515_write_register>
 26a:	89 e2       	ldi	r24, 0x29	; 41
 26c:	0e 94 af 00 	call	0x15e	; 0x15e <mcp2515_read_register>
 270:	18 2f       	mov	r17, r24
 272:	c7 01       	movw	r24, r14
 274:	8f 58       	subi	r24, 0x8F	; 143
 276:	9f 4f       	sbci	r25, 0xFF	; 255
 278:	fc 01       	movw	r30, r24
 27a:	04 91       	lpm	r16, Z+
 27c:	8f e0       	ldi	r24, 0x0F	; 15
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	0e 94 96 00 	call	0x12c	; 0x12c <mcp2515_write_register>
 284:	10 17       	cp	r17, r16
 286:	39 f4       	brne	.+14     	; 0x296 <can_init+0xcc>
 288:	8e e0       	ldi	r24, 0x0E	; 14
 28a:	0e 94 af 00 	call	0x15e	; 0x15e <mcp2515_read_register>
 28e:	80 7e       	andi	r24, 0xE0	; 224
 290:	d9 f7       	brne	.-10     	; 0x288 <can_init+0xbe>
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	01 c0       	rjmp	.+2      	; 0x298 <can_init+0xce>
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0f 90       	pop	r0
 29a:	cf 91       	pop	r28
 29c:	df 91       	pop	r29
 29e:	1f 91       	pop	r17
 2a0:	0f 91       	pop	r16
 2a2:	ff 90       	pop	r15
 2a4:	ef 90       	pop	r14
 2a6:	08 95       	ret

000002a8 <can_send_message>:
 2a8:	ff 92       	push	r15
 2aa:	0f 93       	push	r16
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	ec 01       	movw	r28, r24
 2b4:	80 ea       	ldi	r24, 0xA0	; 160
 2b6:	0e 94 dd 00 	call	0x1ba	; 0x1ba <mcp2515_read_status>
 2ba:	82 ff       	sbrs	r24, 2
 2bc:	06 c0       	rjmp	.+12     	; 0x2ca <can_send_message+0x22>
 2be:	84 ff       	sbrs	r24, 4
 2c0:	06 c0       	rjmp	.+12     	; 0x2ce <can_send_message+0x26>
 2c2:	86 fd       	sbrc	r24, 6
 2c4:	35 c0       	rjmp	.+106    	; 0x330 <can_send_message+0x88>
 2c6:	14 e0       	ldi	r17, 0x04	; 4
 2c8:	03 c0       	rjmp	.+6      	; 0x2d0 <can_send_message+0x28>
 2ca:	10 e0       	ldi	r17, 0x00	; 0
 2cc:	01 c0       	rjmp	.+2      	; 0x2d0 <can_send_message+0x28>
 2ce:	12 e0       	ldi	r17, 0x02	; 2
 2d0:	2c 98       	cbi	0x05, 4	; 5
 2d2:	81 2f       	mov	r24, r17
 2d4:	80 64       	ori	r24, 0x40	; 64
 2d6:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 2da:	6c 81       	ldd	r22, Y+4	; 0x04
 2dc:	66 95       	lsr	r22
 2de:	61 70       	andi	r22, 0x01	; 1
 2e0:	ce 01       	movw	r24, r28
 2e2:	0e 94 a0 01 	call	0x340	; 0x340 <mcp2515_write_id>
 2e6:	0d 81       	ldd	r16, Y+5	; 0x05
 2e8:	0f 70       	andi	r16, 0x0F	; 15
 2ea:	8c 81       	ldd	r24, Y+4	; 0x04
 2ec:	80 ff       	sbrs	r24, 0
 2ee:	05 c0       	rjmp	.+10     	; 0x2fa <can_send_message+0x52>
 2f0:	80 2f       	mov	r24, r16
 2f2:	80 64       	ori	r24, 0x40	; 64
 2f4:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 2f8:	0c c0       	rjmp	.+24     	; 0x312 <can_send_message+0x6a>
 2fa:	80 2f       	mov	r24, r16
 2fc:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 300:	26 96       	adiw	r28, 0x06	; 6
 302:	ff 24       	eor	r15, r15
 304:	04 c0       	rjmp	.+8      	; 0x30e <can_send_message+0x66>
 306:	89 91       	ld	r24, Y+
 308:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 30c:	f3 94       	inc	r15
 30e:	f0 16       	cp	r15, r16
 310:	d0 f3       	brcs	.-12     	; 0x306 <can_send_message+0x5e>
 312:	2c 9a       	sbi	0x05, 4	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 314:	85 e0       	ldi	r24, 0x05	; 5
 316:	8a 95       	dec	r24
 318:	f1 f7       	brne	.-4      	; 0x316 <can_send_message+0x6e>
 31a:	00 00       	nop
 31c:	2c 98       	cbi	0x05, 4	; 5
 31e:	11 23       	and	r17, r17
 320:	09 f4       	brne	.+2      	; 0x324 <can_send_message+0x7c>
 322:	11 e0       	ldi	r17, 0x01	; 1
 324:	81 2f       	mov	r24, r17
 326:	80 68       	ori	r24, 0x80	; 128
 328:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 32c:	2c 9a       	sbi	0x05, 4	; 5
 32e:	01 c0       	rjmp	.+2      	; 0x332 <can_send_message+0x8a>
 330:	10 e0       	ldi	r17, 0x00	; 0
 332:	81 2f       	mov	r24, r17
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	1f 91       	pop	r17
 33a:	0f 91       	pop	r16
 33c:	ff 90       	pop	r15
 33e:	08 95       	ret

00000340 <mcp2515_write_id>:
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	ec 01       	movw	r28, r24
 346:	66 23       	and	r22, r22
 348:	e1 f0       	breq	.+56     	; 0x382 <mcp2515_write_id+0x42>
 34a:	8a 81       	ldd	r24, Y+2	; 0x02
 34c:	9b 81       	ldd	r25, Y+3	; 0x03
 34e:	35 e0       	ldi	r19, 0x05	; 5
 350:	96 95       	lsr	r25
 352:	87 95       	ror	r24
 354:	3a 95       	dec	r19
 356:	e1 f7       	brne	.-8      	; 0x350 <mcp2515_write_id+0x10>
 358:	8e bd       	out	0x2e, r24	; 46
 35a:	9a 81       	ldd	r25, Y+2	; 0x02
 35c:	89 2f       	mov	r24, r25
 35e:	88 0f       	add	r24, r24
 360:	88 0f       	add	r24, r24
 362:	88 0f       	add	r24, r24
 364:	80 7e       	andi	r24, 0xE0	; 224
 366:	88 60       	ori	r24, 0x08	; 8
 368:	93 70       	andi	r25, 0x03	; 3
 36a:	89 2b       	or	r24, r25
 36c:	0d b4       	in	r0, 0x2d	; 45
 36e:	07 fe       	sbrs	r0, 7
 370:	fd cf       	rjmp	.-6      	; 0x36c <mcp2515_write_id+0x2c>
 372:	9e b5       	in	r25, 0x2e	; 46
 374:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 378:	89 81       	ldd	r24, Y+1	; 0x01
 37a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 37e:	88 81       	ld	r24, Y
 380:	16 c0       	rjmp	.+44     	; 0x3ae <mcp2515_write_id+0x6e>
 382:	88 81       	ld	r24, Y
 384:	99 81       	ldd	r25, Y+1	; 0x01
 386:	23 e0       	ldi	r18, 0x03	; 3
 388:	96 95       	lsr	r25
 38a:	87 95       	ror	r24
 38c:	2a 95       	dec	r18
 38e:	e1 f7       	brne	.-8      	; 0x388 <mcp2515_write_id+0x48>
 390:	8e bd       	out	0x2e, r24	; 46
 392:	88 81       	ld	r24, Y
 394:	82 95       	swap	r24
 396:	88 0f       	add	r24, r24
 398:	80 7e       	andi	r24, 0xE0	; 224
 39a:	0d b4       	in	r0, 0x2d	; 45
 39c:	07 fe       	sbrs	r0, 7
 39e:	fd cf       	rjmp	.-6      	; 0x39a <mcp2515_write_id+0x5a>
 3a0:	9e b5       	in	r25, 0x2e	; 46
 3a2:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <spi_putc>
 3b2:	df 91       	pop	r29
 3b4:	cf 91       	pop	r28
 3b6:	08 95       	ret

000003b8 <mcp2515_spi_init>:
 3b8:	81 e5       	ldi	r24, 0x51	; 81
 3ba:	8c bd       	out	0x2c, r24	; 44
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	8d bd       	out	0x2d, r24	; 45
 3c0:	08 95       	ret

000003c2 <spi_putc>:
 3c2:	8e bd       	out	0x2e, r24	; 46
 3c4:	0d b4       	in	r0, 0x2d	; 45
 3c6:	07 fe       	sbrs	r0, 7
 3c8:	fd cf       	rjmp	.-6      	; 0x3c4 <spi_putc+0x2>
 3ca:	8e b5       	in	r24, 0x2e	; 46
 3cc:	08 95       	ret

000003ce <_exit>:
 3ce:	f8 94       	cli

000003d0 <__stop_program>:
 3d0:	ff cf       	rjmp	.-2      	; 0x3d0 <__stop_program>
