Archive member included because of file (symbol)

/avrusr/lib/libuart.a(uart.o)
                              obj/Release/avrusr/source/serial-echo/main.o (_Z9uart_initl)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodsi4.o)
                              /avrusr/lib/libuart.a(uart.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o (exit)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                              /avrusr/lib/libuart.a(uart.o) (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
LOAD obj/Release/avrusr/source/serial-echo/main.o
LOAD /avrusr/lib/libuart.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xd58
 *(.vectors)
 .vectors       0x00000000       0x94 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000094                . = ALIGN (0x2)
                0x00000094                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000094        0x0 linker stubs
 *(.trampolines*)
                0x00000094                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000094                __ctors_start = .
 *(.ctors)
                0x00000094                __ctors_end = .
                0x00000094                __dtors_start = .
 *(.dtors)
                0x00000094                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000094        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
                0x00000094                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000094        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000a0       0x10 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x000000a0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000b0        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
 *(.init9)
 *(.text)
 .text          0x000000b8        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
                0x000000b8                __vector_28
                0x000000b8                __vector_1
                0x000000b8                __vector_34
                0x000000b8                __vector_24
                0x000000b8                __vector_12
                0x000000b8                __bad_interrupt
                0x000000b8                __vector_6
                0x000000b8                __vector_31
                0x000000b8                __vector_35
                0x000000b8                __vector_3
                0x000000b8                __vector_23
                0x000000b8                __vector_30
                0x000000b8                __vector_25
                0x000000b8                __vector_11
                0x000000b8                __vector_13
                0x000000b8                __vector_17
                0x000000b8                __vector_19
                0x000000b8                __vector_7
                0x000000b8                __vector_27
                0x000000b8                __vector_5
                0x000000b8                __vector_4
                0x000000b8                __vector_9
                0x000000b8                __vector_2
                0x000000b8                __vector_15
                0x000000b8                __vector_36
                0x000000b8                __vector_29
                0x000000b8                __vector_8
                0x000000b8                __vector_26
                0x000000b8                __vector_14
                0x000000b8                __vector_10
                0x000000b8                __vector_16
                0x000000b8                __vector_18
                0x000000b8                __vector_20
 .text          0x000000bc       0x28 obj/Release/avrusr/source/serial-echo/main.o
                0x000000bc                main
 .text          0x000000e4      0xc2c /avrusr/lib/libuart.a(uart.o)
                0x000000e4                __vector_33
                0x000001a8                __vector_22
                0x0000026c                __vector_21
                0x00000346                _Z9uart_initl
                0x00000428                _Z9uart_putch
                0x000004da                _Z9uart_getcv
                0x00000554                _Z11uart_putstrPh
                0x000005c6                _Z14uart_isnewdatav
                0x000005f8                _Z9uart_readPhi
                0x000006c8                _Z10uart_countv
                0x0000072a                _Z10uart_writePht
                0x000007a0                _Z10uart_clearv
                0x000007be                __vector_32
                0x00000898                _Z10uart1_initl
                0x0000097a                _Z10uart1_putch
                0x00000a2c                _Z10uart1_getcv
                0x00000aa6                _Z12uart1_putstrPh
                0x00000b18                _Z15uart1_isnewdatav
                0x00000b4a                _Z10uart1_readPhi
                0x00000c1a                _Z11uart1_countv
                0x00000c7c                _Z11uart1_writePht
                0x00000cf2                _Z11uart1_clearv
 .text          0x00000d10        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x00000d10        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text          0x00000d10        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x00000d10                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000d10       0x44 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodsi4.o)
                0x00000d10                __udivmodsi4
 .text.libgcc   0x00000d54        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000d54        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x00000d54                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000d54        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                0x00000d54                exit
                0x00000d54                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000d54        0x4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00000d58                _etext = .

.data           0x00800100        0x0 load address 0x00000d58
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
 .data          0x00800100        0x0 obj/Release/avrusr/source/serial-echo/main.o
 .data          0x00800100        0x0 /avrusr/lib/libuart.a(uart.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100      0x7e0
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
 .bss           0x00800100        0x0 obj/Release/avrusr/source/serial-echo/main.o
 .bss           0x00800100      0x7e0 /avrusr/lib/libuart.a(uart.o)
                0x00800100                uart_tx_buffer
                0x008002f4                uart_tx_write
                0x008002f6                uart_tx_read
                0x008002f8                uart_rx_buffer
                0x008004ec                uart_rx_write
                0x008004ee                uart_rx_read
                0x008004f0                uart1_tx_buffer
                0x008006e4                uart1_tx_write
                0x008006e6                uart1_tx_read
                0x008006e8                uart1_rx_buffer
                0x008008dc                uart1_rx_write
                0x008008de                uart1_rx_read
 .bss           0x008008e0        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x008008e0        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .bss           0x008008e0        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x008008e0                PROVIDE (__bss_end, .)
                0x00000d58                __data_load_start = LOADADDR (.data)
                0x00000d58                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008008e0        0x0
                0x008008e0                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008008e0                PROVIDE (__noinit_end, .)
                0x008008e0                _end = .
                0x008008e0                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(bin/Release/serial-echo.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__bss_end                                         /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                                                  /avrusr/lib/libuart.a(uart.o)
__heap_end                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__init                                            /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__stack                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodsi4.o)
                                                  /avrusr/lib/libuart.a(uart.o)
__vector_1                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_10                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_11                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_12                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_13                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_14                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_15                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_16                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_17                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_18                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_19                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_2                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_20                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_21                                       /avrusr/lib/libuart.a(uart.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_22                                       /avrusr/lib/libuart.a(uart.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_23                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_24                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_25                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_26                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_27                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_28                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_29                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_3                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_30                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_31                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_32                                       /avrusr/lib/libuart.a(uart.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_33                                       /avrusr/lib/libuart.a(uart.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_34                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_35                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_36                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_4                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_5                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_6                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_7                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_8                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_9                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vector_default                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
__vectors                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
_exit                                             /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
main                                              obj/Release/avrusr/source/serial-echo/main.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtcan128.o
uart1_clear()                                     /avrusr/lib/libuart.a(uart.o)
uart1_count()                                     /avrusr/lib/libuart.a(uart.o)
uart1_getc()                                      /avrusr/lib/libuart.a(uart.o)
uart1_init(long)                                  /avrusr/lib/libuart.a(uart.o)
uart1_isnewdata()                                 /avrusr/lib/libuart.a(uart.o)
uart1_putc(unsigned char)                         /avrusr/lib/libuart.a(uart.o)
uart1_putstr(unsigned char*)                      /avrusr/lib/libuart.a(uart.o)
uart1_read(unsigned char*, int)                   /avrusr/lib/libuart.a(uart.o)
uart1_rx_buffer                                   /avrusr/lib/libuart.a(uart.o)
uart1_rx_read                                     /avrusr/lib/libuart.a(uart.o)
uart1_rx_write                                    /avrusr/lib/libuart.a(uart.o)
uart1_tx_buffer                                   /avrusr/lib/libuart.a(uart.o)
uart1_tx_read                                     /avrusr/lib/libuart.a(uart.o)
uart1_tx_write                                    /avrusr/lib/libuart.a(uart.o)
uart1_write(unsigned char*, unsigned short)       /avrusr/lib/libuart.a(uart.o)
uart_clear()                                      /avrusr/lib/libuart.a(uart.o)
uart_count()                                      /avrusr/lib/libuart.a(uart.o)
uart_getc()                                       /avrusr/lib/libuart.a(uart.o)
                                                  obj/Release/avrusr/source/serial-echo/main.o
uart_init(long)                                   /avrusr/lib/libuart.a(uart.o)
                                                  obj/Release/avrusr/source/serial-echo/main.o
uart_isnewdata()                                  /avrusr/lib/libuart.a(uart.o)
                                                  obj/Release/avrusr/source/serial-echo/main.o
uart_putc(unsigned char)                          /avrusr/lib/libuart.a(uart.o)
                                                  obj/Release/avrusr/source/serial-echo/main.o
uart_putstr(unsigned char*)                       /avrusr/lib/libuart.a(uart.o)
uart_read(unsigned char*, int)                    /avrusr/lib/libuart.a(uart.o)
uart_rx_buffer                                    /avrusr/lib/libuart.a(uart.o)
uart_rx_read                                      /avrusr/lib/libuart.a(uart.o)
uart_rx_write                                     /avrusr/lib/libuart.a(uart.o)
uart_tx_buffer                                    /avrusr/lib/libuart.a(uart.o)
uart_tx_read                                      /avrusr/lib/libuart.a(uart.o)
uart_tx_write                                     /avrusr/lib/libuart.a(uart.o)
uart_write(unsigned char*, unsigned short)        /avrusr/lib/libuart.a(uart.o)
