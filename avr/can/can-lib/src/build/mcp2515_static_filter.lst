   1               		.file	"mcp2515_static_filter.c"
<<<<<<< HEAD
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               	.global	can_static_filter
  11               	can_static_filter:
  12               	.LFB19:
  13               		.file 1 "mcp2515_static_filter.c"
   1:mcp2515_static_filter.c **** // ----------------------------------------------------------------------------
   2:mcp2515_static_filter.c **** /*
   3:mcp2515_static_filter.c ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:mcp2515_static_filter.c ****  *  All rights reserved.
   5:mcp2515_static_filter.c ****  *
   6:mcp2515_static_filter.c ****  * Redistribution and use in source and binary forms, with or without
   7:mcp2515_static_filter.c ****  * modification, are permitted provided that the following conditions
   8:mcp2515_static_filter.c ****  * are met:
   9:mcp2515_static_filter.c ****  * 1. Redistributions of source code must retain the above copyright
  10:mcp2515_static_filter.c ****  *    notice, this list of conditions and the following disclaimer.
  11:mcp2515_static_filter.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:mcp2515_static_filter.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:mcp2515_static_filter.c ****  *    documentation and/or other materials provided with the distribution.
  14:mcp2515_static_filter.c ****  *
  15:mcp2515_static_filter.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:mcp2515_static_filter.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:mcp2515_static_filter.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:mcp2515_static_filter.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:mcp2515_static_filter.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:mcp2515_static_filter.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:mcp2515_static_filter.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:mcp2515_static_filter.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:mcp2515_static_filter.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:mcp2515_static_filter.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:mcp2515_static_filter.c ****  * SUCH DAMAGE.
  26:mcp2515_static_filter.c ****  *
  27:mcp2515_static_filter.c ****  * $Id: mcp2515_static_filter.c 6564 2008-06-14 11:33:57Z fabian $
  28:mcp2515_static_filter.c ****  */
  29:mcp2515_static_filter.c **** // ----------------------------------------------------------------------------
  30:mcp2515_static_filter.c **** 
  31:mcp2515_static_filter.c **** #include "mcp2515_private.h"
  32:mcp2515_static_filter.c **** #ifdef	SUPPORT_FOR_MCP2515__
  33:mcp2515_static_filter.c **** 
  34:mcp2515_static_filter.c **** // ----------------------------------------------------------------------------
  35:mcp2515_static_filter.c **** // Filter setzen
  36:mcp2515_static_filter.c **** 
  37:mcp2515_static_filter.c **** void mcp2515_static_filter(const prog_uint8_t *filter)
  38:mcp2515_static_filter.c **** {
  14               		.loc 1 38 0
  15               	.LVL0:
  16 0000 0F93      		push r16
  17               	.LCFI0:
  18 0002 1F93      		push r17
  19               	.LCFI1:
  20 0004 CF93      		push r28
  21               	.LCFI2:
  22 0006 DF93      		push r29
  23               	.LCFI3:
  24               	/* prologue: function */
  25               	/* frame size = 0 */
  26               	/* stack size = 4 */
  27               	.L__stack_usage = 4
  28 0008 EC01      		movw r28,r24
  39:mcp2515_static_filter.c **** 	// change to configuration mode
  40:mcp2515_static_filter.c **** 	mcp2515_bit_modify(CANCTRL, 0xe0, (1<<REQOP2));
  29               		.loc 1 40 0
  30 000a 40E8      		ldi r20,lo8(-128)
  31 000c 60EE      		ldi r22,lo8(-32)
  32 000e 8FE0      		ldi r24,lo8(15)
  33               	.LVL1:
  34 0010 0E94 0000 		call mcp2515_bit_modify
  35               	.LVL2:
  36               	.L2:
  41:mcp2515_static_filter.c **** 	while ((mcp2515_read_register(CANSTAT) & 0xe0) != (1<<REQOP2))
  37               		.loc 1 41 0 discriminator 1
  38 0014 8EE0      		ldi r24,lo8(14)
  39 0016 0E94 0000 		call mcp2515_read_register
  40               	.LVL3:
  41 001a 807E      		andi r24,lo8(-32)
  42 001c 8038      		cpi r24,lo8(-128)
  43 001e 01F4      		brne .L2
  42:mcp2515_static_filter.c **** 		;
  43:mcp2515_static_filter.c **** 	
  44:mcp2515_static_filter.c **** 	mcp2515_write_register(RXB0CTRL, (1<<BUKT));
  44               		.loc 1 44 0
  45 0020 64E0      		ldi r22,lo8(4)
  46 0022 80E6      		ldi r24,lo8(96)
  47 0024 0E94 0000 		call mcp2515_write_register
  48               	.LVL4:
  45:mcp2515_static_filter.c **** 	mcp2515_write_register(RXB1CTRL, 0);
  49               		.loc 1 45 0
  50 0028 60E0      		ldi r22,0
  51 002a 80E7      		ldi r24,lo8(112)
  52 002c 0E94 0000 		call mcp2515_write_register
  53               	.LVL5:
  46:mcp2515_static_filter.c ****     
  47:mcp2515_static_filter.c **** 	uint8_t i, j;
  48:mcp2515_static_filter.c **** 	for (i = 0; i < 0x30; i += 0x10)
  54               		.loc 1 48 0
  55 0030 10E0      		ldi r17,0
  56               	.LVL6:
  57               	.L6:
  49:mcp2515_static_filter.c **** 	{
  50:mcp2515_static_filter.c **** 		RESET(MCP2515_CS);
  58               		.loc 1 50 0
  59 0032 2C98      		cbi 0x5,4
  51:mcp2515_static_filter.c **** 		spi_putc(SPI_WRITE);
  60               		.loc 1 51 0
  61 0034 82E0      		ldi r24,lo8(2)
  62 0036 0E94 0000 		call spi_putc
  63               	.LVL7:
  52:mcp2515_static_filter.c **** 		spi_putc(i);
  64               		.loc 1 52 0
  65 003a 812F      		mov r24,r17
  66 003c 0E94 0000 		call spi_putc
  67               	.LVL8:
  53:mcp2515_static_filter.c **** 		
  54:mcp2515_static_filter.c **** 		for (j = 0; j < 12; j++) 
  68               		.loc 1 54 0
  69 0040 00E0      		ldi r16,0
  70               	.LVL9:
  71               	.L5:
  55:mcp2515_static_filter.c **** 		{
  56:mcp2515_static_filter.c **** 			if (i == 0x20 && j >= 0x08)
  72               		.loc 1 56 0
  73 0042 1032      		cpi r17,lo8(32)
  74 0044 01F4      		brne .L3
  75               		.loc 1 56 0 is_stmt 0 discriminator 1
  76 0046 0830      		cpi r16,lo8(8)
  77 0048 00F4      		brsh .L4
  78               	.L3:
  79               	.LBB2:
  57:mcp2515_static_filter.c **** 				break;
  58:mcp2515_static_filter.c **** 			
  59:mcp2515_static_filter.c **** 			spi_putc(pgm_read_byte(filter++));
  80               		.loc 1 59 0 is_stmt 1
  81 004a FE01      		movw r30,r28
  82               	.LVL10:
  83 004c 2196      		adiw r28,1
  84               	.LVL11:
  85               	/* #APP */
  86               	 ;  59 "mcp2515_static_filter.c" 1
  87 004e 8491      		lpm r24, Z
  88               		
  89               	 ;  0 "" 2
  90               	.LVL12:
  91               	/* #NOAPP */
  92               	.LBE2:
  93 0050 0E94 0000 		call spi_putc
  94               	.LVL13:
  54:mcp2515_static_filter.c **** 		for (j = 0; j < 12; j++) 
  95               		.loc 1 54 0
  96 0054 0F5F      		subi r16,lo8(-(1))
  97               	.LVL14:
  98 0056 0C30      		cpi r16,lo8(12)
  99 0058 01F4      		brne .L5
 100               	.LVL15:
 101               	.L4:
  60:mcp2515_static_filter.c **** 		}
  61:mcp2515_static_filter.c **** 		SET(MCP2515_CS);
 102               		.loc 1 61 0
 103 005a 2C9A      		sbi 0x5,4
  48:mcp2515_static_filter.c **** 	for (i = 0; i < 0x30; i += 0x10)
 104               		.loc 1 48 0
 105 005c 105F      		subi r17,lo8(-(16))
 106               	.LVL16:
 107 005e 1033      		cpi r17,lo8(48)
 108 0060 01F4      		brne .L6
  62:mcp2515_static_filter.c **** 	}
  63:mcp2515_static_filter.c **** 	
  64:mcp2515_static_filter.c **** 	mcp2515_bit_modify(CANCTRL, 0xe0, 0);
 109               		.loc 1 64 0
 110 0062 40E0      		ldi r20,0
 111 0064 60EE      		ldi r22,lo8(-32)
 112 0066 8FE0      		ldi r24,lo8(15)
 113               	/* epilogue start */
  65:mcp2515_static_filter.c **** }
 114               		.loc 1 65 0
 115 0068 DF91      		pop r29
 116 006a CF91      		pop r28
 117               	.LVL17:
 118 006c 1F91      		pop r17
 119               	.LVL18:
 120 006e 0F91      		pop r16
  64:mcp2515_static_filter.c **** 	mcp2515_bit_modify(CANCTRL, 0xe0, 0);
 121               		.loc 1 64 0
 122 0070 0C94 0000 		jmp mcp2515_bit_modify
 123               	.LVL19:
 124               	.LFE19:
 176               	.Letext0:
 177               		.file 2 "/usr/lib/gcc/avr/4.7.0/../../../avr/include/stdint.h"
 178               		.file 3 "./config.h"
 179               		.file 4 "mcp2515_private.h"
 180               		.file 5 "spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mcp2515_static_filter.c
     /tmp/ccLcgqR3.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccLcgqR3.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccLcgqR3.s:4      *ABS*:0000003f __SREG__
     /tmp/ccLcgqR3.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccLcgqR3.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccLcgqR3.s:11     .text:00000000 can_static_filter
=======
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  16               	.global	can_static_filter
  18               	can_static_filter:
  19               	.LFB18:
  20               	.LM1:
  21               	.LVL0:
  22 0000 0F93      		push r16
  23 0002 1F93      		push r17
  24 0004 CF93      		push r28
  25 0006 DF93      		push r29
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 4 */
  29               	.L__stack_usage = 4
  30 0008 EC01      		movw r28,r24
  31               	.LM2:
  32 000a 8FE0      		ldi r24,lo8(15)
  33               	.LVL1:
  34 000c 60EE      		ldi r22,lo8(-32)
  35 000e 40E8      		ldi r20,lo8(-128)
  36 0010 0E94 0000 		call mcp2515_bit_modify
  37               	.L2:
  38               	.LM3:
  39 0014 8EE0      		ldi r24,lo8(14)
  40 0016 0E94 0000 		call mcp2515_read_register
  41 001a 807E      		andi r24,lo8(-32)
  42 001c 8038      		cpi r24,lo8(-128)
  43 001e 01F4      		brne .L2
  44               	.LM4:
  45 0020 80E6      		ldi r24,lo8(96)
  46 0022 64E0      		ldi r22,lo8(4)
  47 0024 0E94 0000 		call mcp2515_write_register
  48               	.LM5:
  49 0028 80E7      		ldi r24,lo8(112)
  50 002a 60E0      		ldi r22,lo8(0)
  51 002c 0E94 0000 		call mcp2515_write_register
  52               	.LVL2:
  53               	.LM6:
  54 0030 10E0      		ldi r17,lo8(0)
  55               	.LVL3:
  56               	.L6:
  57               	.LM7:
  58 0032 2C98      		cbi 37-32,4
  59               	.LM8:
  60 0034 82E0      		ldi r24,lo8(2)
  61 0036 0E94 0000 		call spi_putc
  62               	.LM9:
  63 003a 812F      		mov r24,r17
  64 003c 0E94 0000 		call spi_putc
  65               	.LVL4:
  66               	.LM10:
  67 0040 00E0      		ldi r16,lo8(0)
  68               	.LVL5:
  69               	.L5:
  70               	.LM11:
  71 0042 1032      		cpi r17,lo8(32)
  72 0044 01F4      		brne .L3
  73               	.LM12:
  74 0046 0830      		cpi r16,lo8(8)
  75 0048 00F4      		brsh .L4
  76               	.L3:
  77               	.LM13:
  78 004a FE01      		movw r30,r28
  79               	.LVL6:
  80               	.LBB2:
  81               	.LM14:
  82 004c 2196      		adiw r28,1
  83               	.LVL7:
  84               	/* #APP */
  85               	 ;  59 "mcp2515_static_filter.c" 1
  86 004e 8491      		lpm r24, Z
  87               		
  88               	 ;  0 "" 2
  89               	.LVL8:
  90               	/* #NOAPP */
  91               	.LBE2:
  92 0050 0E94 0000 		call spi_putc
  93               	.LVL9:
  94               	.LM15:
  95 0054 0F5F      		subi r16,lo8(-(1))
  96               	.LVL10:
  97 0056 0C30      		cpi r16,lo8(12)
  98 0058 01F4      		brne .L5
  99               	.LVL11:
 100               	.L4:
 101               	.LM16:
 102 005a 2C9A      		sbi 37-32,4
 103               	.LM17:
 104 005c 105F      		subi r17,lo8(-(16))
 105               	.LVL12:
 106 005e 1033      		cpi r17,lo8(48)
 107 0060 01F4      		brne .L6
 108               	.LM18:
 109 0062 8FE0      		ldi r24,lo8(15)
 110 0064 60EE      		ldi r22,lo8(-32)
 111 0066 40E0      		ldi r20,lo8(0)
 112 0068 0E94 0000 		call mcp2515_bit_modify
 113               	/* epilogue start */
 114               	.LM19:
 115 006c DF91      		pop r29
 116 006e CF91      		pop r28
 117               	.LVL13:
 118 0070 1F91      		pop r17
 119               	.LVL14:
 120 0072 0F91      		pop r16
 121 0074 0895      		ret
 122               	.LFE18:
 148               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 mcp2515_static_filter.c
     /tmp/ccWg3k5l.s:2      *ABS*:0000003f __SREG__
     /tmp/ccWg3k5l.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccWg3k5l.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccWg3k5l.s:5      *ABS*:00000034 __CCP__
     /tmp/ccWg3k5l.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccWg3k5l.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccWg3k5l.s:18     .text:00000000 can_static_filter
>>>>>>> f9092c8728abba927a3c1179142d688269dd8aaf

UNDEFINED SYMBOLS
mcp2515_bit_modify
mcp2515_read_register
mcp2515_write_register
spi_putc
