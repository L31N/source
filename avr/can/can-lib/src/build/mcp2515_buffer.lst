   1               		.file	"mcp2515_buffer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               	.global	can_check_message
  11               	can_check_message:
  12               	.LFB19:
  13               		.file 1 "mcp2515_buffer.c"
   1:mcp2515_buffer.c **** // ----------------------------------------------------------------------------
   2:mcp2515_buffer.c **** /*
   3:mcp2515_buffer.c ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:mcp2515_buffer.c ****  *  All rights reserved.
   5:mcp2515_buffer.c ****  *
   6:mcp2515_buffer.c ****  * Redistribution and use in source and binary forms, with or without
   7:mcp2515_buffer.c ****  * modification, are permitted provided that the following conditions
   8:mcp2515_buffer.c ****  * are met:
   9:mcp2515_buffer.c ****  * 1. Redistributions of source code must retain the above copyright
  10:mcp2515_buffer.c ****  *    notice, this list of conditions and the following disclaimer.
  11:mcp2515_buffer.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:mcp2515_buffer.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:mcp2515_buffer.c ****  *    documentation and/or other materials provided with the distribution.
  14:mcp2515_buffer.c ****  *
  15:mcp2515_buffer.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:mcp2515_buffer.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:mcp2515_buffer.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:mcp2515_buffer.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:mcp2515_buffer.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:mcp2515_buffer.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:mcp2515_buffer.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:mcp2515_buffer.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:mcp2515_buffer.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:mcp2515_buffer.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:mcp2515_buffer.c ****  * SUCH DAMAGE.
  26:mcp2515_buffer.c ****  *
  27:mcp2515_buffer.c ****  * $Id: mcp2515_buffer.c 6653 2008-09-02 13:51:25Z fabian $
  28:mcp2515_buffer.c ****  */
  29:mcp2515_buffer.c **** // ----------------------------------------------------------------------------
  30:mcp2515_buffer.c **** 
  31:mcp2515_buffer.c **** #include "mcp2515_private.h"
  32:mcp2515_buffer.c **** #ifdef	SUPPORT_FOR_MCP2515__
  33:mcp2515_buffer.c **** 
  34:mcp2515_buffer.c **** // ----------------------------------------------------------------------------
  35:mcp2515_buffer.c **** // check if there are any new messages waiting
  36:mcp2515_buffer.c **** 
  37:mcp2515_buffer.c **** bool mcp2515_check_message(void)
  38:mcp2515_buffer.c **** {
  14               		.loc 1 38 0
  15               	/* prologue: function */
  16               	/* frame size = 0 */
  17               	/* stack size = 0 */
  18               	.L__stack_usage = 0
  39:mcp2515_buffer.c **** 	#if defined(MCP2515_INT)
  40:mcp2515_buffer.c **** 		return ((!IS_SET(MCP2515_INT)) ? true : false);
  19               		.loc 1 40 0
  20 0000 83B1      		in r24,0x3
  21 0002 82FB      		bst r24,2
  22 0004 8827      		clr r24
  23 0006 80F9      		bld r24,0
  41:mcp2515_buffer.c **** 	#else
  42:mcp2515_buffer.c **** 		#ifdef RXnBF_FUNKTION
  43:mcp2515_buffer.c **** 			if (!IS_SET(MCP2515_RX0BF) || !IS_SET(MCP2515_RX1BF))
  44:mcp2515_buffer.c **** 				return true;
  45:mcp2515_buffer.c **** 			else
  46:mcp2515_buffer.c **** 				return false;
  47:mcp2515_buffer.c **** 		#else
  48:mcp2515_buffer.c **** 			return ((mcp2515_read_status(SPI_RX_STATUS) & 0xC0) ? true : false);
  49:mcp2515_buffer.c **** 		#endif
  50:mcp2515_buffer.c **** 	#endif
  51:mcp2515_buffer.c **** }
  24               		.loc 1 51 0
  25 0008 91E0      		ldi r25,lo8(1)
  26 000a 8927      		eor r24,r25
  27 000c 0895      		ret
  28               	.LFE19:
  30               	.global	can_check_free_buffer
  32               	can_check_free_buffer:
  33               	.LFB20:
  52:mcp2515_buffer.c **** 
  53:mcp2515_buffer.c **** // ----------------------------------------------------------------------------
  54:mcp2515_buffer.c **** // check if there is a free buffer to send messages
  55:mcp2515_buffer.c **** 
  56:mcp2515_buffer.c **** bool mcp2515_check_free_buffer(void)
  57:mcp2515_buffer.c **** {
  34               		.loc 1 57 0
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  58:mcp2515_buffer.c **** 	uint8_t status = mcp2515_read_status(SPI_READ_STATUS);
  39               		.loc 1 58 0
  40 000e 80EA      		ldi r24,lo8(-96)
  41 0010 0E94 0000 		call mcp2515_read_status
  42               	.LVL0:
  59:mcp2515_buffer.c **** 	
  60:mcp2515_buffer.c **** 	if ((status & 0x54) == 0x54)
  43               		.loc 1 60 0
  44 0014 982F      		mov r25,r24
  45 0016 9475      		andi r25,lo8(84)
  46 0018 81E0      		ldi r24,lo8(1)
  47               	.LVL1:
  48 001a 9435      		cpi r25,lo8(84)
  49 001c 01F4      		brne .L3
  50 001e 80E0      		ldi r24,0
  51               	.L3:
  61:mcp2515_buffer.c **** 		return false;		// all buffers used
  62:mcp2515_buffer.c **** 	else
  63:mcp2515_buffer.c **** 		return true;
  64:mcp2515_buffer.c **** }
  52               		.loc 1 64 0
  53 0020 0895      		ret
  54               	.LFE20:
  90               	.Letext0:
  91               		.file 2 "/usr/lib/gcc/avr/4.7.0/../../../avr/include/stdint.h"
  92               		.file 3 "mcp2515_private.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mcp2515_buffer.c
     /tmp/ccyp8siN.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccyp8siN.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccyp8siN.s:4      *ABS*:0000003f __SREG__
     /tmp/ccyp8siN.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccyp8siN.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccyp8siN.s:11     .text:00000000 can_check_message
     /tmp/ccyp8siN.s:32     .text:0000000e can_check_free_buffer

UNDEFINED SYMBOLS
mcp2515_read_status
