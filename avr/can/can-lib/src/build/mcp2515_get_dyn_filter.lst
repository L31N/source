   1               		.file	"mcp2515_get_dyn_filter.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               	.global	can_get_filter
  11               	can_get_filter:
  12               	.LFB19:
  13               		.file 1 "mcp2515_get_dyn_filter.c"
   1:mcp2515_get_dyn_filter.c **** // ----------------------------------------------------------------------------
   2:mcp2515_get_dyn_filter.c **** /*
   3:mcp2515_get_dyn_filter.c ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:mcp2515_get_dyn_filter.c ****  *  All rights reserved.
   5:mcp2515_get_dyn_filter.c ****  *
   6:mcp2515_get_dyn_filter.c ****  * Redistribution and use in source and binary forms, with or without
   7:mcp2515_get_dyn_filter.c ****  * modification, are permitted provided that the following conditions
   8:mcp2515_get_dyn_filter.c ****  * are met:
   9:mcp2515_get_dyn_filter.c ****  * 1. Redistributions of source code must retain the above copyright
  10:mcp2515_get_dyn_filter.c ****  *    notice, this list of conditions and the following disclaimer.
  11:mcp2515_get_dyn_filter.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:mcp2515_get_dyn_filter.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:mcp2515_get_dyn_filter.c ****  *    documentation and/or other materials provided with the distribution.
  14:mcp2515_get_dyn_filter.c ****  *
  15:mcp2515_get_dyn_filter.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:mcp2515_get_dyn_filter.c ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:mcp2515_get_dyn_filter.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:mcp2515_get_dyn_filter.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:mcp2515_get_dyn_filter.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:mcp2515_get_dyn_filter.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:mcp2515_get_dyn_filter.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:mcp2515_get_dyn_filter.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:mcp2515_get_dyn_filter.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:mcp2515_get_dyn_filter.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:mcp2515_get_dyn_filter.c ****  * SUCH DAMAGE.
  26:mcp2515_get_dyn_filter.c ****  *
  27:mcp2515_get_dyn_filter.c ****  * $Id: mcp2515_get_dyn_filter.c 6837 2008-11-16 19:05:15Z fabian $
  28:mcp2515_get_dyn_filter.c ****  */
  29:mcp2515_get_dyn_filter.c **** // ----------------------------------------------------------------------------
  30:mcp2515_get_dyn_filter.c **** 
  31:mcp2515_get_dyn_filter.c **** #include "mcp2515_private.h"
  32:mcp2515_get_dyn_filter.c **** #ifdef	SUPPORT_FOR_MCP2515__
  33:mcp2515_get_dyn_filter.c **** 
  34:mcp2515_get_dyn_filter.c **** // ----------------------------------------------------------------------------
  35:mcp2515_get_dyn_filter.c **** // get a filter
  36:mcp2515_get_dyn_filter.c **** 
  37:mcp2515_get_dyn_filter.c **** uint8_t mcp2515_get_filter(uint8_t number, can_filter_t *filter)
  38:mcp2515_get_dyn_filter.c **** {
  14               		.loc 1 38 0
  15               	.LVL0:
  16 0000 EF92      		push r14
  17               	.LCFI0:
  18 0002 FF92      		push r15
  19               	.LCFI1:
  20 0004 0F93      		push r16
  21               	.LCFI2:
  22 0006 1F93      		push r17
  23               	.LCFI3:
  24 0008 CF93      		push r28
  25               	.LCFI4:
  26 000a DF93      		push r29
  27               	.LCFI5:
  28 000c 1F92      		push __zero_reg__
  29               	.LCFI6:
  30 000e CDB7      		in r28,__SP_L__
  31 0010 DEB7      		in r29,__SP_H__
  32               	.LCFI7:
  33               	/* prologue: function */
  34               	/* frame size = 1 */
  35               	/* stack size = 7 */
  36               	.L__stack_usage = 7
  37 0012 182F      		mov r17,r24
  38 0014 7B01      		movw r14,r22
  39:mcp2515_get_dyn_filter.c **** 	uint8_t mask_address;
  40:mcp2515_get_dyn_filter.c **** 	uint8_t filter_address;
  41:mcp2515_get_dyn_filter.c **** 	uint8_t temp;
  42:mcp2515_get_dyn_filter.c **** 	uint8_t mode = mcp2515_read_register(CANSTAT);
  39               		.loc 1 42 0
  40 0016 8EE0      		ldi r24,lo8(14)
  41               	.LVL1:
  42 0018 0E94 0000 		call mcp2515_read_register
  43               	.LVL2:
  44 001c 082F      		mov r16,r24
  45               	.LVL3:
  43:mcp2515_get_dyn_filter.c **** 	
  44:mcp2515_get_dyn_filter.c **** 	if (number > 5)
  46               		.loc 1 44 0
  47 001e 1630      		cpi r17,lo8(6)
  48 0020 00F0      		brlo .+2
  49 0022 00C0      		rjmp .L11
  50               	.LVL4:
  51               	.LBB6:
  52               	.LBB7:
  53               		.file 2 "mcp2515_private.h"
   1:mcp2515_private.h **** // ----------------------------------------------------------------------------
   2:mcp2515_private.h **** /*
   3:mcp2515_private.h ****  * Copyright (c) 2007 Fabian Greif, Roboterclub Aachen e.V.
   4:mcp2515_private.h ****  *  All rights reserved.
   5:mcp2515_private.h ****  *
   6:mcp2515_private.h ****  * Redistribution and use in source and binary forms, with or without
   7:mcp2515_private.h ****  * modification, are permitted provided that the following conditions
   8:mcp2515_private.h ****  * are met:
   9:mcp2515_private.h ****  * 1. Redistributions of source code must retain the above copyright
  10:mcp2515_private.h ****  *    notice, this list of conditions and the following disclaimer.
  11:mcp2515_private.h ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:mcp2515_private.h ****  *    notice, this list of conditions and the following disclaimer in the
  13:mcp2515_private.h ****  *    documentation and/or other materials provided with the distribution.
  14:mcp2515_private.h ****  *
  15:mcp2515_private.h ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:mcp2515_private.h ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:mcp2515_private.h ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:mcp2515_private.h ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:mcp2515_private.h ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:mcp2515_private.h ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:mcp2515_private.h ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:mcp2515_private.h ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:mcp2515_private.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:mcp2515_private.h ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:mcp2515_private.h ****  * SUCH DAMAGE.
  26:mcp2515_private.h ****  *
  27:mcp2515_private.h ****  * $Id: mcp2515_private.h 6910 2008-11-30 21:13:14Z fabian $
  28:mcp2515_private.h ****  */
  29:mcp2515_private.h **** // ----------------------------------------------------------------------------
  30:mcp2515_private.h **** 
  31:mcp2515_private.h **** #ifndef	MCP2515_PRIVATE_H
  32:mcp2515_private.h **** #define	MCP2515_PRIVATE_H
  33:mcp2515_private.h **** 
  34:mcp2515_private.h **** // ----------------------------------------------------------------------------
  35:mcp2515_private.h **** /**
  36:mcp2515_private.h ****  * \brief	defines only used inside the library
  37:mcp2515_private.h ****  *
  38:mcp2515_private.h ****  * \author	Fabian Greif <fabian.greif@rwth-aachen.de>
  39:mcp2515_private.h ****  * \version	$Id: mcp2515_private.h 6910 2008-11-30 21:13:14Z fabian $
  40:mcp2515_private.h ****  *
  41:mcp2515_private.h ****  * \todo	MCP2515_TXRTSn Pins nutzbar machen.
  42:mcp2515_private.h ****  */
  43:mcp2515_private.h **** // ----------------------------------------------------------------------------
  44:mcp2515_private.h **** 
  45:mcp2515_private.h **** #include <avr/io.h>
  46:mcp2515_private.h **** #include <avr/pgmspace.h>
  47:mcp2515_private.h **** #include <inttypes.h>
  48:mcp2515_private.h **** #include <stdbool.h>
  49:mcp2515_private.h **** 
  50:mcp2515_private.h **** #include "can.h"
  51:mcp2515_private.h **** #include "utils.h"
  52:mcp2515_private.h **** 
  53:mcp2515_private.h **** #include "can_private.h"
  54:mcp2515_private.h **** #include "spi.h"
  55:mcp2515_private.h **** 
  56:mcp2515_private.h **** // ----------------------------------------------------------------------------
  57:mcp2515_private.h **** 
  58:mcp2515_private.h **** #if (BUILD_FOR_MCP2515 == 1)
  59:mcp2515_private.h **** 	#if defined(__AVR_ATmega16__) || defined(__AVR_ATmega32__) || defined(__AVR_ATmega644__)
  60:mcp2515_private.h **** 		#define	P_MOSI	B,5
  61:mcp2515_private.h **** 		#define	P_MISO	B,6
  62:mcp2515_private.h **** 		#define	P_SCK	B,7
  63:mcp2515_private.h **** 		#define	SUPPORT_FOR_MCP2515__
  64:mcp2515_private.h **** 	#elif defined(__AVR_ATmega8__)  || defined(__AVR_ATmega48__) || \
  65:mcp2515_private.h **** 		  defined(__AVR_ATmega88__) || defined(__AVR_ATmega168__)
  66:mcp2515_private.h **** 		#define	P_MOSI	B,3
  67:mcp2515_private.h **** 		#define	P_MISO	B,4
  68:mcp2515_private.h **** 		#define	P_SCK	B,5
  69:mcp2515_private.h **** 		#define	SUPPORT_FOR_MCP2515__
  70:mcp2515_private.h **** 	#elif defined(__AVR_ATmega128__)
  71:mcp2515_private.h **** 		#define	P_MOSI	B,2
  72:mcp2515_private.h **** 		#define	P_MISO	B,3
  73:mcp2515_private.h **** 		#define	P_SCK	B,1
  74:mcp2515_private.h **** 		#define	SUPPORT_FOR_MCP2515__
  75:mcp2515_private.h **** 	#elif defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
  76:mcp2515_private.h **** 		#define	P_MOSI	B,0
  77:mcp2515_private.h **** 		#define	P_MISO	B,1
  78:mcp2515_private.h **** 		#define	P_SCK	B,2
  79:mcp2515_private.h **** 		
  80:mcp2515_private.h **** 		#define	USE_SOFTWARE_SPI		1
  81:mcp2515_private.h **** 		#define	SUPPORT_FOR_MCP2515__
  82:mcp2515_private.h **** 	#else
  83:mcp2515_private.h **** 		#error	choosen AVR-type is not supported yet!
  84:mcp2515_private.h **** 	#endif
  85:mcp2515_private.h **** #endif
  86:mcp2515_private.h **** 
  87:mcp2515_private.h **** 
  88:mcp2515_private.h **** #ifdef  SUPPORT_FOR_MCP2515__
  89:mcp2515_private.h **** 
  90:mcp2515_private.h **** // ----------------------------------------------------------------------------
  91:mcp2515_private.h **** // load some default values
  92:mcp2515_private.h **** 
  93:mcp2515_private.h **** #ifndef	MCP2515_CLKOUT_PRESCALER
  94:mcp2515_private.h **** 	#define	MCP2515_CLKOUT_PRESCALER	0
  95:mcp2515_private.h **** #endif
  96:mcp2515_private.h **** #ifndef	MCP2515_INTERRUPTS
  97:mcp2515_private.h **** 	#define	MCP2515_INTERRUPTS			(1<<RX1IE)|(1<<RX0IE)
  98:mcp2515_private.h **** #endif
  99:mcp2515_private.h **** 
 100:mcp2515_private.h **** // ----------------------------------------------------------------------------
 101:mcp2515_private.h **** // TODO: this file is imcompatible with the at90can
 102:mcp2515_private.h **** #include "mcp2515_defs.h"
 103:mcp2515_private.h **** 
 104:mcp2515_private.h **** #ifndef	MCP2515_CS
 105:mcp2515_private.h **** 	#error	MCP2515_CS ist nicht definiert!
 106:mcp2515_private.h **** #endif
 107:mcp2515_private.h **** 
 108:mcp2515_private.h **** #if defined(MCP2515_RX0BF) && !defined(MCP2515_RX1BF)
 109:mcp2515_private.h **** 	#warning	only MCP2515_RX0BF but not MCP2515_RX1BF defined!
 110:mcp2515_private.h **** #elif !defined(MCP2515_RX0BF) && defined(MCP2515_RX1BF)
 111:mcp2515_private.h **** 	#warning	only MCP2515_RX1BF but not MCP2515_RX0BF defined!
 112:mcp2515_private.h **** #elif defined(MCP2515_RX0BF) && defined(MCP2515_RX1BF)
 113:mcp2515_private.h **** 	#define	RXnBF_FUNKTION
 114:mcp2515_private.h **** #endif
 115:mcp2515_private.h **** 
 116:mcp2515_private.h **** // -------------------------------------------------------------------------
 117:mcp2515_private.h **** /**
 118:mcp2515_private.h ****  * \brief	Beschreiben von internen Registern
 119:mcp2515_private.h ****  */
 120:mcp2515_private.h **** extern void mcp2515_write_register( uint8_t adress, uint8_t data );
 121:mcp2515_private.h **** 
 122:mcp2515_private.h **** // -------------------------------------------------------------------------
 123:mcp2515_private.h **** /**
 124:mcp2515_private.h ****  * \brief	Lesen der internen Register
 125:mcp2515_private.h ****  */
 126:mcp2515_private.h **** extern uint8_t mcp2515_read_register(uint8_t adress);
 127:mcp2515_private.h **** 
 128:mcp2515_private.h **** extern uint8_t mcp2515_read_status(uint8_t type);
 129:mcp2515_private.h **** 
 130:mcp2515_private.h **** // -------------------------------------------------------------------------
 131:mcp2515_private.h **** /**
 132:mcp2515_private.h ****  * \brief	Setzten/loeschen einzelner Bits
 133:mcp2515_private.h ****  *
 134:mcp2515_private.h ****  * Diese Funktionen laesst sich nur auf die Register BFPCTRL, 
 135:mcp2515_private.h ****  * TXRTSCTRL, CANCTRL, CNF1, CNF2, CNF3, CANINTE, CANINTF, EFLG,
 136:mcp2515_private.h ****  * TXB0CTRL, TXB1CTRL, TXB2CTRL, RXB0CTRL und RXB1CTRL anwenden.
 137:mcp2515_private.h ****  *
 138:mcp2515_private.h ****  * \see		Datenblatt des MCP2515, Registerbersichtstabelle
 139:mcp2515_private.h ****  */
 140:mcp2515_private.h **** extern void mcp2515_bit_modify(uint8_t adress, uint8_t mask, uint8_t data);
 141:mcp2515_private.h **** 
 142:mcp2515_private.h **** // -------------------------------------------------------------------------
 143:mcp2515_private.h **** extern __attribute__ ((gnu_inline)) inline void mcp2515_change_operation_mode(uint8_t mode)
 144:mcp2515_private.h **** {
 145:mcp2515_private.h **** 	mcp2515_bit_modify(CANCTRL, 0xe0, mode);
  54               		.loc 2 145 0
  55 0024 40E8      		ldi r20,lo8(-128)
  56 0026 60EE      		ldi r22,lo8(-32)
  57 0028 8FE0      		ldi r24,lo8(15)
  58 002a 0E94 0000 		call mcp2515_bit_modify
  59               	.LVL5:
  60               	.L3:
 146:mcp2515_private.h **** 	while ((mcp2515_read_register(CANSTAT) & 0xe0) != (mode & 0xe0))
  61               		.loc 2 146 0
  62 002e 8EE0      		ldi r24,lo8(14)
  63 0030 0E94 0000 		call mcp2515_read_register
  64               	.LVL6:
  65               	.LBE7:
  66 0034 8058      		subi r24,lo8(-(-128))
  67 0036 807E      		andi r24,lo8(-32)
  68               	.LBB8:
  69 0038 01F4      		brne .L3
  70               	.LBE8:
  71               	.LBE6:
  45:mcp2515_get_dyn_filter.c **** 		return 0;
  46:mcp2515_get_dyn_filter.c **** 	
  47:mcp2515_get_dyn_filter.c **** 	// change to configuration mode
  48:mcp2515_get_dyn_filter.c **** 	mcp2515_change_operation_mode( (1<<REQOP2) );
  49:mcp2515_get_dyn_filter.c **** 	
  50:mcp2515_get_dyn_filter.c **** 	if (number <= 1)
  72               		.loc 1 50 0
  73 003a 1230      		cpi r17,lo8(2)
  74 003c 00F4      		brsh .L4
  75               	.LVL7:
  51:mcp2515_get_dyn_filter.c **** 	{
  52:mcp2515_get_dyn_filter.c **** 		mask_address = RXM0SIDH;
  53:mcp2515_get_dyn_filter.c **** 		temp = mcp2515_read_register(RXB0CTRL);
  76               		.loc 1 53 0
  77 003e 80E6      		ldi r24,lo8(96)
  78 0040 0E94 0000 		call mcp2515_read_register
  79               	.LVL8:
  52:mcp2515_get_dyn_filter.c **** 		mask_address = RXM0SIDH;
  80               		.loc 1 52 0
  81 0044 30E2      		ldi r19,lo8(32)
  82 0046 00C0      		rjmp .L5
  83               	.LVL9:
  84               	.L4:
  54:mcp2515_get_dyn_filter.c **** 	}
  55:mcp2515_get_dyn_filter.c **** 	else
  56:mcp2515_get_dyn_filter.c **** 	{
  57:mcp2515_get_dyn_filter.c **** 		mask_address = RXM1SIDH;
  58:mcp2515_get_dyn_filter.c **** 		temp = mcp2515_read_register(RXB1CTRL);
  85               		.loc 1 58 0
  86 0048 80E7      		ldi r24,lo8(112)
  87 004a 0E94 0000 		call mcp2515_read_register
  88               	.LVL10:
  57:mcp2515_get_dyn_filter.c **** 		mask_address = RXM1SIDH;
  89               		.loc 1 57 0
  90 004e 34E2      		ldi r19,lo8(36)
  91               	.LVL11:
  92               	.L5:
  59:mcp2515_get_dyn_filter.c **** 	}
  60:mcp2515_get_dyn_filter.c **** 	
  61:mcp2515_get_dyn_filter.c **** 	temp &= (1<<RXM1)|(1<<RXM0);
  93               		.loc 1 61 0
  94 0050 982F      		mov r25,r24
  95 0052 9076      		andi r25,lo8(96)
  96               	.LVL12:
  62:mcp2515_get_dyn_filter.c **** 	
  63:mcp2515_get_dyn_filter.c **** 	if (temp == 0) {
  97               		.loc 1 63 0
  98 0054 01F4      		brne .L6
  64:mcp2515_get_dyn_filter.c **** 		// filter and masks are disabled
  65:mcp2515_get_dyn_filter.c **** 		#if SUPPORT_EXTENDED_CANID
  66:mcp2515_get_dyn_filter.c **** 		filter->flags.extended = 0;
  99               		.loc 1 66 0
 100 0056 F701      		movw r30,r14
 101 0058 8085      		ldd r24,Z+8
  67:mcp2515_get_dyn_filter.c **** 		#endif
  68:mcp2515_get_dyn_filter.c **** 		filter->flags.rtr = 0;
 102               		.loc 1 68 0
 103 005a 807F      		andi r24,lo8(-16)
 104 005c 8087      		std Z+8,r24
  69:mcp2515_get_dyn_filter.c **** 		filter->mask = 0;
 105               		.loc 1 69 0
 106 005e 1482      		std Z+4,__zero_reg__
 107 0060 1582      		std Z+5,__zero_reg__
 108 0062 1682      		std Z+6,__zero_reg__
 109 0064 1782      		std Z+7,__zero_reg__
  70:mcp2515_get_dyn_filter.c **** 		filter->id = 0;
 110               		.loc 1 70 0
 111 0066 1082      		st Z,__zero_reg__
 112 0068 1182      		std Z+1,__zero_reg__
 113 006a 1282      		std Z+2,__zero_reg__
 114 006c 1382      		std Z+3,__zero_reg__
 115 006e 00C0      		rjmp .L17
 116               	.L6:
  71:mcp2515_get_dyn_filter.c **** 		
  72:mcp2515_get_dyn_filter.c **** 		return 1;
  73:mcp2515_get_dyn_filter.c **** 	}
  74:mcp2515_get_dyn_filter.c **** 	
  75:mcp2515_get_dyn_filter.c **** 	#if SUPPORT_EXTENDED_CANID
  76:mcp2515_get_dyn_filter.c **** 	// transform bits so that they match the format from can.h
  77:mcp2515_get_dyn_filter.c **** 	temp >>= 5;
 117               		.loc 1 77 0
 118 0070 9295      		swap r25
 119               	.LVL13:
 120 0072 9695      		lsr r25
 121 0074 9770      		andi r25,lo8(7)
 122               	.LVL14:
  78:mcp2515_get_dyn_filter.c **** 	temp = ~temp;
 123               		.loc 1 78 0
 124 0076 9095      		com r25
 125               	.LVL15:
  79:mcp2515_get_dyn_filter.c **** 	if (temp & 1) temp = 0x3;
 126               		.loc 1 79 0
 127 0078 90FD      		sbrc r25,0
 128 007a 93E0      		ldi r25,lo8(3)
 129               	.LVL16:
 130               	.L7:
  80:mcp2515_get_dyn_filter.c **** 	
  81:mcp2515_get_dyn_filter.c **** 	filter->flags.extended = temp;
 131               		.loc 1 81 0
 132 007c 292F      		mov r18,r25
 133 007e 2370      		andi r18,lo8(3)
 134 0080 220F      		lsl r18
 135 0082 220F      		lsl r18
 136 0084 F701      		movw r30,r14
 137 0086 9085      		ldd r25,Z+8
 138               	.LVL17:
 139 0088 937F      		andi r25,lo8(-13)
 140 008a 922B      		or r25,r18
 141 008c 9087      		std Z+8,r25
  82:mcp2515_get_dyn_filter.c **** 	#endif
  83:mcp2515_get_dyn_filter.c **** 	
  84:mcp2515_get_dyn_filter.c **** 	// read mask
  85:mcp2515_get_dyn_filter.c **** 	RESET(MCP2515_CS);
 142               		.loc 1 85 0
 143 008e 2C98      		cbi 0x5,4
  86:mcp2515_get_dyn_filter.c **** 	spi_putc(SPI_READ);
 144               		.loc 1 86 0
 145 0090 83E0      		ldi r24,lo8(3)
 146 0092 3983      		std Y+1,r19
 147 0094 0E94 0000 		call spi_putc
 148               	.LVL18:
  87:mcp2515_get_dyn_filter.c **** 	spi_putc(mask_address);
 149               		.loc 1 87 0
 150 0098 3981      		ldd r19,Y+1
 151 009a 832F      		mov r24,r19
 152 009c 0E94 0000 		call spi_putc
 153               	.LVL19:
  88:mcp2515_get_dyn_filter.c **** 	mcp2515_read_id(&filter->mask);
 154               		.loc 1 88 0
 155 00a0 C701      		movw r24,r14
 156 00a2 0496      		adiw r24,4
 157 00a4 0E94 0000 		call mcp2515_read_id
 158               	.LVL20:
  89:mcp2515_get_dyn_filter.c **** 	SET(MCP2515_CS);
 159               		.loc 1 89 0
 160 00a8 2C9A      		sbi 0x5,4
  90:mcp2515_get_dyn_filter.c **** 	
  91:mcp2515_get_dyn_filter.c **** 	if (number <= 2)
 161               		.loc 1 91 0
 162 00aa 1330      		cpi r17,lo8(3)
 163 00ac 00F4      		brsh .L8
  92:mcp2515_get_dyn_filter.c **** 	{
  93:mcp2515_get_dyn_filter.c **** 		filter_address = RXF0SIDH + number * 4;
 164               		.loc 1 93 0
 165 00ae 110F      		lsl r17
 166 00b0 110F      		lsl r17
 167               	.LVL21:
 168 00b2 00C0      		rjmp .L9
 169               	.LVL22:
 170               	.L8:
  94:mcp2515_get_dyn_filter.c **** 	}
  95:mcp2515_get_dyn_filter.c **** 	else
  96:mcp2515_get_dyn_filter.c **** 	{
  97:mcp2515_get_dyn_filter.c **** 		filter_address = RXF3SIDH + (number - 3) * 4;
 171               		.loc 1 97 0
 172 00b4 110F      		lsl r17
 173 00b6 110F      		lsl r17
 174               	.LVL23:
 175 00b8 1C5F      		subi r17,lo8(-(4))
 176               	.LVL24:
 177               	.L9:
  98:mcp2515_get_dyn_filter.c **** 	}
  99:mcp2515_get_dyn_filter.c **** 	
 100:mcp2515_get_dyn_filter.c **** 	// read filter
 101:mcp2515_get_dyn_filter.c **** 	RESET(MCP2515_CS);
 178               		.loc 1 101 0
 179 00ba 2C98      		cbi 0x5,4
 102:mcp2515_get_dyn_filter.c **** 	spi_putc(SPI_READ);
 180               		.loc 1 102 0
 181 00bc 83E0      		ldi r24,lo8(3)
 182 00be 0E94 0000 		call spi_putc
 183               	.LVL25:
 103:mcp2515_get_dyn_filter.c **** 	spi_putc(filter_address);
 184               		.loc 1 103 0
 185 00c2 812F      		mov r24,r17
 186 00c4 0E94 0000 		call spi_putc
 187               	.LVL26:
 104:mcp2515_get_dyn_filter.c **** 	mcp2515_read_id(&filter->id);
 188               		.loc 1 104 0
 189 00c8 C701      		movw r24,r14
 190 00ca 0E94 0000 		call mcp2515_read_id
 191               	.LVL27:
 105:mcp2515_get_dyn_filter.c **** 	SET(MCP2515_CS);
 192               		.loc 1 105 0
 193 00ce 2C9A      		sbi 0x5,4
 194               	.LVL28:
 195               	.LBB9:
 196               	.LBB10:
 145:mcp2515_private.h **** 	mcp2515_bit_modify(CANCTRL, 0xe0, mode);
 197               		.loc 2 145 0
 198 00d0 402F      		mov r20,r16
 199 00d2 60EE      		ldi r22,lo8(-32)
 200 00d4 8FE0      		ldi r24,lo8(15)
 201 00d6 0E94 0000 		call mcp2515_bit_modify
 202               	.LVL29:
 203               	.L10:
 204               		.loc 2 146 0
 205 00da 8EE0      		ldi r24,lo8(14)
 206 00dc 0E94 0000 		call mcp2515_read_register
 207               	.LVL30:
 208               	.LBE10:
 209 00e0 8027      		eor r24,r16
 210 00e2 807E      		andi r24,lo8(-32)
 211               	.LBB11:
 212 00e4 01F4      		brne .L10
 213               	.LVL31:
 214               	.L17:
 106:mcp2515_get_dyn_filter.c **** 	
 107:mcp2515_get_dyn_filter.c **** 	// restore previous mode
 108:mcp2515_get_dyn_filter.c **** 	mcp2515_change_operation_mode( mode );
 109:mcp2515_get_dyn_filter.c **** 	
 110:mcp2515_get_dyn_filter.c **** 	return 1;
 215               		.loc 1 110 0
 216 00e6 81E0      		ldi r24,lo8(1)
 217 00e8 00C0      		rjmp .L2
 218               	.LVL32:
 219               	.L11:
 220               	.LBE11:
 221               	.LBE9:
  45:mcp2515_get_dyn_filter.c **** 		return 0;
 222               		.loc 1 45 0
 223 00ea 80E0      		ldi r24,0
 224               	.LVL33:
 225               	.L2:
 226               	/* epilogue start */
 111:mcp2515_get_dyn_filter.c **** }
 227               		.loc 1 111 0
 228 00ec 0F90      		pop __tmp_reg__
 229 00ee DF91      		pop r29
 230 00f0 CF91      		pop r28
 231 00f2 1F91      		pop r17
 232 00f4 0F91      		pop r16
 233               	.LVL34:
 234 00f6 FF90      		pop r15
 235 00f8 EF90      		pop r14
 236               	.LVL35:
 237 00fa 0895      		ret
 238               	.LFE19:
 310               	.Letext0:
 311               		.file 3 "/usr/lib/gcc/avr/4.7.0/../../../avr/include/stdint.h"
 312               		.file 4 "../can.h"
 313               		.file 5 "spi.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mcp2515_get_dyn_filter.c
     /tmp/ccLOvlO1.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccLOvlO1.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccLOvlO1.s:4      *ABS*:0000003f __SREG__
     /tmp/ccLOvlO1.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccLOvlO1.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccLOvlO1.s:11     .text:00000000 can_get_filter

UNDEFINED SYMBOLS
mcp2515_read_register
mcp2515_bit_modify
spi_putc
mcp2515_read_id
