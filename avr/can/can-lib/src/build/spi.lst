   1               		.file	"spi.c"
<<<<<<< HEAD
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               	.global	mcp2515_spi_init
  11               	mcp2515_spi_init:
  12               	.LFB19:
  13               		.file 1 "spi.c"
   1:spi.c         **** // ----------------------------------------------------------------------------
   2:spi.c         **** /*
   3:spi.c         ****  * Copyright (c) 2008 Florian Kristen, Fabian Greif
   4:spi.c         ****  *  All rights reserved.
   5:spi.c         ****  *
   6:spi.c         ****  * Redistribution and use in source and binary forms, with or without
   7:spi.c         ****  * modification, are permitted provided that the following conditions
   8:spi.c         ****  * are met:
   9:spi.c         ****  * 1. Redistributions of source code must retain the above copyright
  10:spi.c         ****  *    notice, this list of conditions and the following disclaimer.
  11:spi.c         ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:spi.c         ****  *    notice, this list of conditions and the following disclaimer in the
  13:spi.c         ****  *    documentation and/or other materials provided with the distribution.
  14:spi.c         ****  *
  15:spi.c         ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
  16:spi.c         ****  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  17:spi.c         ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  18:spi.c         ****  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
  19:spi.c         ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  20:spi.c         ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
  21:spi.c         ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  22:spi.c         ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  23:spi.c         ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
  24:spi.c         ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  25:spi.c         ****  * SUCH DAMAGE.
  26:spi.c         ****  *
  27:spi.c         ****  * $Id: spi.c 6802 2008-11-12 10:25:05Z fabian $
  28:spi.c         ****  */
  29:spi.c         **** // ----------------------------------------------------------------------------
  30:spi.c         **** 
  31:spi.c         **** #include "mcp2515_private.h"
  32:spi.c         **** #ifdef	SUPPORT_FOR_MCP2515__
  33:spi.c         **** 
  34:spi.c         **** #include "spi.h"
  35:spi.c         **** 
  36:spi.c         **** #ifdef	SPI_PRESCALER
  37:spi.c         **** 	#if (SPI_PRESCALER == 2) || (SPI_PRESCALER == 8) || (SPI_PRESCALER == 32) || (SPI_PRESCALER == 64)
  38:spi.c         **** 		#define	R_SPSR	(1<<SPI2X)
  39:spi.c         **** 		#define SPI_PRESCALER_ 	(SPI_PRESCALER * 2)
  40:spi.c         **** 	#else
  41:spi.c         **** 		#define	R_SPSR	0
  42:spi.c         **** 		#define	SPI_PRESCALER_	SPI_PRESCALER
  43:spi.c         **** 	#endif
  44:spi.c         **** 	
  45:spi.c         **** 	#define	SPI_CLOCK_RATE_BIT0		(1<<SPR0)
  46:spi.c         **** 	#define	SPI_CLOCK_RATE_BIT1		(1<<SPR1)
  47:spi.c         **** 	
  48:spi.c         **** 	#if (SPI_PRESCALER_ == 4)
  49:spi.c         **** 		#define	R_SPCR	0
  50:spi.c         **** 	#elif (SPI_PRESCALER_ == 16)
  51:spi.c         **** 		#define	R_SPCR	SPI_CLOCK_RATE_BIT0
  52:spi.c         **** 	#elif (SPI_PRESCALER_ == 64)
  53:spi.c         **** 		#define	R_SPCR	SPI_CLOCK_RATE_BIT1
  54:spi.c         **** 	#elif (SPI_PRESCALER_ == 128)
  55:spi.c         **** 		#define	R_SPCR	SPI_CLOCK_RATE_BIT1 | SPI_CLOCK_RATE_BIT0
  56:spi.c         **** 	#else
  57:spi.c         **** 		#error	 SPI_PRESCALER must be one of the values of 2^n with n = 1..7!
  58:spi.c         **** 	#endif
  59:spi.c         **** #else
  60:spi.c         **** 	#error	SPI_PRESCALER not defined!
  61:spi.c         **** #endif
  62:spi.c         **** 
  63:spi.c         **** 
  64:spi.c         **** // ----------------------------------------------------------------------------
  65:spi.c         **** void mcp2515_spi_init(void)
  66:spi.c         **** {
  14               		.loc 1 66 0
  15               	/* prologue: function */
  16               	/* frame size = 0 */
  17               	/* stack size = 0 */
  18               	.L__stack_usage = 0
  67:spi.c         **** 	#ifndef USE_SOFTWARE_SPI
  68:spi.c         **** 		// Aktivieren des SPI Master Interfaces
  69:spi.c         **** 		SPCR = (1<<SPE)|(1<<MSTR) | R_SPCR;
  19               		.loc 1 69 0
  20 0000 81E5      		ldi r24,lo8(81)
  21 0002 8CBD      		out 0x2c,r24
  70:spi.c         **** 		SPSR = R_SPSR;
  22               		.loc 1 70 0
  23 0004 81E0      		ldi r24,lo8(1)
  24 0006 8DBD      		out 0x2d,r24
  25 0008 0895      		ret
  26               	.LFE19:
  28               	.global	spi_putc
  30               	spi_putc:
  31               	.LFB20:
  71:spi.c         **** 	#endif
  72:spi.c         **** }
  73:spi.c         **** 
  74:spi.c         **** // ----------------------------------------------------------------------------
  75:spi.c         **** // Schreibt/liest ein Byte ueber den Hardware SPI Bus
  76:spi.c         **** 
  77:spi.c         **** uint8_t spi_putc(uint8_t data)
  78:spi.c         **** {
  32               		.loc 1 78 0
  33               	.LVL0:
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  79:spi.c         **** 	#ifdef	USE_SOFTWARE_SPI
  80:spi.c         **** 	
  81:spi.c         **** 	uint8_t data_in = 0;
  82:spi.c         **** 	
  83:spi.c         **** 	RESET(P_SCK);
  84:spi.c         **** 	for (uint8_t i=0;i<8;i++)
  85:spi.c         **** 	{
  86:spi.c         **** 		data_in <<= 1;
  87:spi.c         **** 		
  88:spi.c         **** 		if (data & 0x80)
  89:spi.c         **** 			SET(P_MOSI);
  90:spi.c         **** 		else
  91:spi.c         **** 			RESET(P_MOSI);
  92:spi.c         **** 		
  93:spi.c         **** 		SET(P_SCK);
  94:spi.c         **** 		_delay_us(2);
  95:spi.c         **** 		
  96:spi.c         **** 		if (IS_SET(P_MISO))
  97:spi.c         **** 			data_in |= 1;
  98:spi.c         **** 		
  99:spi.c         **** 		data <<= 1;
 100:spi.c         **** 		
 101:spi.c         **** 		RESET(P_SCK);
 102:spi.c         **** 		_delay_us(2);
 103:spi.c         **** 	}
 104:spi.c         **** 	
 105:spi.c         **** 	return data_in;
 106:spi.c         **** 	
 107:spi.c         **** 	#else
 108:spi.c         **** 	
 109:spi.c         **** 	// put byte in send-buffer
 110:spi.c         **** 	SPDR = data;
  38               		.loc 1 110 0
  39 000a 8EBD      		out 0x2e,r24
  40               	.L3:
 111:spi.c         **** 	
 112:spi.c         **** 	// wait until byte was send
 113:spi.c         **** 	while( !( SPSR & (1<<SPIF) ) )
  41               		.loc 1 113 0 discriminator 1
  42 000c 0DB4      		in __tmp_reg__,0x2d
  43 000e 07FE      		sbrs __tmp_reg__,7
  44 0010 00C0      		rjmp .L3
 114:spi.c         **** 		;
 115:spi.c         **** 	
 116:spi.c         **** 	return SPDR;
  45               		.loc 1 116 0
  46 0012 8EB5      		in r24,0x2e
  47               	.LVL1:
 117:spi.c         **** 	
 118:spi.c         **** 	#endif
 119:spi.c         **** }
  48               		.loc 1 119 0
  49 0014 0895      		ret
  50               	.LFE20:
  86               	.Letext0:
  87               		.file 2 "/usr/lib/gcc/avr/4.7.0/../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 spi.c
     /tmp/ccRY2d7m.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccRY2d7m.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccRY2d7m.s:4      *ABS*:0000003f __SREG__
     /tmp/ccRY2d7m.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccRY2d7m.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccRY2d7m.s:11     .text:00000000 mcp2515_spi_init
     /tmp/ccRY2d7m.s:30     .text:0000000a spi_putc
=======
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  16               	.global	mcp2515_spi_init
  18               	mcp2515_spi_init:
  19               	.LFB18:
  20               	.LM1:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  25               	.LM2:
  26 0000 81E5      		ldi r24,lo8(81)
  27 0002 8CBD      		out 76-32,r24
  28               	.LM3:
  29 0004 81E0      		ldi r24,lo8(1)
  30 0006 8DBD      		out 77-32,r24
  31               	/* epilogue start */
  32               	.LM4:
  33 0008 0895      		ret
  34               	.LFE18:
  36               	.global	spi_putc
  38               	spi_putc:
  39               	.LFB19:
  40               	.LM5:
  41               	.LVL0:
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               	.LM6:
  47 000a 8EBD      		out 78-32,r24
  48               	.L3:
  49               	.LM7:
  50 000c 0DB4      		in __tmp_reg__,77-32
  51 000e 07FE      		sbrs __tmp_reg__,7
  52 0010 00C0      		rjmp .L3
  53               	.LM8:
  54 0012 8EB5      		in r24,78-32
  55               	.LVL1:
  56               	/* epilogue start */
  57               	.LM9:
  58 0014 0895      		ret
  59               	.LFE19:
  93               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 spi.c
     /tmp/ccwSm4bv.s:2      *ABS*:0000003f __SREG__
     /tmp/ccwSm4bv.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccwSm4bv.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccwSm4bv.s:5      *ABS*:00000034 __CCP__
     /tmp/ccwSm4bv.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccwSm4bv.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccwSm4bv.s:18     .text:00000000 mcp2515_spi_init
     /tmp/ccwSm4bv.s:38     .text:0000000a spi_putc
>>>>>>> f9092c8728abba927a3c1179142d688269dd8aaf

NO UNDEFINED SYMBOLS
